{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nlet Animate = /*#__PURE__*/(() => {\n  class Animate {\n    constructor(host, el, renderer) {\n      this.host = host;\n      this.el = el;\n      this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n      this.bindIntersectionObserver();\n    }\n    bindIntersectionObserver() {\n      const options = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 1.0\n      };\n      this.observer = new IntersectionObserver(el => this.isVisible(el), options);\n      this.observer.observe(this.host.nativeElement);\n    }\n    isVisible(element) {\n      const [intersectionObserverEntry] = element;\n      intersectionObserverEntry.isIntersecting ? this.enter() : this.leave();\n    }\n    enter() {\n      this.host.nativeElement.style.visibility = 'visible';\n      DomHandler.addClass(this.host.nativeElement, this.enterClass);\n    }\n    leave() {\n      DomHandler.removeClass(this.host.nativeElement, this.enterClass);\n      if (this.leaveClass) {\n        DomHandler.addClass(this.host.nativeElement, this.leaveClass);\n      }\n      const animationDuration = this.host.nativeElement.style.animationDuration || 500;\n      this.timeout = setTimeout(() => {\n        this.host.nativeElement.style.visibility = 'hidden';\n      }, animationDuration);\n    }\n    unbindIntersectionObserver() {\n      if (this.observer) {\n        this.observer.unobserve(this.host.nativeElement);\n      }\n    }\n    ngOnDestroy() {\n      this.unbindIntersectionObserver();\n      clearTimeout(this.timeout);\n    }\n  }\n  Animate.ɵfac = function Animate_Factory(t) {\n    return new (t || Animate)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  Animate.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: Animate,\n    selectors: [[\"\", \"pAnimate\", \"\"]],\n    hostVars: 2,\n    hostBindings: function Animate_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-animate\", true);\n      }\n    },\n    inputs: {\n      enterClass: \"enterClass\",\n      leaveClass: \"leaveClass\"\n    }\n  });\n  return Animate;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AnimateModule = /*#__PURE__*/(() => {\n  class AnimateModule {}\n  AnimateModule.ɵfac = function AnimateModule_Factory(t) {\n    return new (t || AnimateModule)();\n  };\n  AnimateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AnimateModule\n  });\n  AnimateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return AnimateModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Animate, AnimateModule };\n//# sourceMappingURL=primeng-animate.mjs.map\n//# sourceMappingURL=primeng-animate.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}