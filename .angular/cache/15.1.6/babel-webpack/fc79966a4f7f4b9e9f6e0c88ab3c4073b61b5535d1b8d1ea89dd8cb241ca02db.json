{"ast":null,"code":"import { ErrorHandler, InjectionToken, Injector } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { GlobalErrorHandler } from './core/error.handler';\nimport { MenubarModule } from 'primeng/menubar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AnimateModule } from 'primeng/animate';\nimport { Logger } from './services/logger/logger';\nimport { AdvancedLoggerService } from './services/logger/advanced-logger.service';\nimport { BasicLoggerService } from './services/logger/basic-logger.service';\nimport * as i0 from \"@angular/core\";\nexport const AppContextToken = new InjectionToken('AppContext');\nexport var AppContext = /*#__PURE__*/(() => {\n  (function (AppContext) {\n    AppContext[\"MOBILE\"] = \"MOBILE\";\n    AppContext[\"DESKTOP\"] = \"DESKTOP\";\n    AppContext[\"BROWSER\"] = \"BROWSER\";\n  })(AppContext || (AppContext = {}));\n  return AppContext;\n})();\nconst appContext = AppContext.MOBILE;\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: Logger,\n      useFactory: injector => {\n        return injector.get(AppContextToken) === AppContext.MOBILE ? new AdvancedLoggerService() : new BasicLoggerService();\n      },\n      deps: [Injector]\n    }, {\n      provide: AppContextToken,\n      useValue: appContext\n    }, {\n      provide: ErrorHandler,\n      useClass: GlobalErrorHandler\n    }],\n    imports: [BrowserModule, BrowserAnimationsModule, FormsModule, AppRoutingModule, MenubarModule, HttpClientModule, AnimateModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}